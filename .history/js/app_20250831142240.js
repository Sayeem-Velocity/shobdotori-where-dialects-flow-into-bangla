const sentences = [
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶ú‡¶ï‡ßá ‡¶¨‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡•§", "‡¶è‡¶ñ‡¶® ‡¶ï‡¶Ø‡¶º‡¶ü‡¶æ ‡¶¨‡¶æ‡¶ú‡ßá ‡¶¨‡¶≤‡ßã?", "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞ ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡¶á ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
  "‡¶¶‡¶∞‡¶ú‡¶æ ‡¶§‡¶æ‡¶°‡¶º‡¶æ‡¶§‡¶æ‡¶°‡¶º‡¶ø ‡¶ñ‡ßÅ‡¶≤‡ßã‡•§", "‡¶Ü‡¶≤‡ßã‡¶ü‡¶æ ‡¶®‡¶ø‡¶≠‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡¶æ‡¶ì‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ñ‡ßá‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡•§", "‡¶≠‡¶æ‡¶§ ‡¶è‡¶ï‡ßá‡¶¨‡¶æ‡¶∞‡ßá ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
  "‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶™‡¶æ‡¶®‡¶ø ‡¶¶‡¶æ‡¶ì‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶ú ‡¶ñ‡ßÅ‡¶¨ ‡¶ï‡ßç‡¶≤‡¶æ‡¶®‡ßç‡¶§‡•§", "‡¶ö‡¶≤ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶Ø‡¶æ‡¶á‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶®‡¶á ‡¶Ü‡¶∏‡¶õ‡¶ø‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ï‡¶æ‡¶≤ ‡¶Ü‡¶∏‡¶¨‡ßá?", "‡¶Ü‡¶ú‡¶ï‡ßá ‡¶ñ‡ßÅ‡¶¨ ‡¶ó‡¶∞‡¶Æ ‡¶≤‡¶æ‡¶ó‡¶õ‡ßá‡•§", "‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶™‡¶°‡¶º‡¶õ‡ßá‡•§", "‡¶õ‡¶æ‡¶§‡¶æ ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ì ‡¶è‡¶ñ‡¶®‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶ú ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶ñ‡ßÅ‡¶¨ ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø‡•§", "‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶∏‡ßá ‡¶¨‡¶∏‡ßã‡•§", "‡¶ì‡¶á ‡¶¨‡¶á‡¶ü‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶¶‡¶æ‡¶ì‡•§",
  "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ‡¶ü‡¶æ ‡¶ï‡ßÄ ‡¶¨‡¶≤‡ßã?", "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶∞‡¶´‡¶ø‡¶ï ‡¶π‡¶æ‡¶∏‡¶æ‡¶®‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßã‡¶•‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶∂‡¶π‡¶∞ ‡¶•‡ßá‡¶ï‡ßá‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶™‡¶°‡¶º‡¶æ‡¶∂‡ßã‡¶®‡¶æ ‡¶ï‡¶∞‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶™‡¶°‡¶º‡¶õ‡¶ø‡•§", "‡¶¶‡¶∞‡¶ú‡¶æ‡¶Ø‡¶º ‡¶ï‡ßá ‡¶¶‡¶æ‡¶Å‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡ßá?", "‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶á ‡¶õ‡¶ø‡¶≤‡¶æ‡¶Æ‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶è‡¶ñ‡¶® ‡¶¨‡ßç‡¶Ø‡¶∏‡ßç‡¶§?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶¨‡ßç‡¶Ø‡¶∏‡ßç‡¶§‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ñ‡¶æ‡¶¨‡ßá?", "‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ï ‡¶ï‡¶æ‡¶™ ‡¶ö‡¶æ ‡¶ñ‡¶æ‡¶¨‡ßã‡•§",
  "‡¶≠‡¶æ‡¶§ ‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶∂‡ßá‡¶∑ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶è‡¶ñ‡¶®‡¶á ‡¶∂‡ßá‡¶∑ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ó‡¶æ‡¶® ‡¶∂‡ßÅ‡¶®‡¶õ‡ßã?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Ü‡¶Æ‡¶ø ‡¶ó‡¶æ‡¶® ‡¶∂‡ßÅ‡¶®‡¶õ‡¶ø‡•§",
  "‡¶Ü‡¶Æ‡¶ø ‡¶Æ‡¶æ‡¶ù‡ßá ‡¶Æ‡¶æ‡¶ù‡ßá ‡¶ó‡¶æ‡¶® ‡¶ó‡¶æ‡¶á‡•§", "‡¶ü‡¶ø‡¶≠‡¶ø ‡¶è‡¶ñ‡¶®‡¶á ‡¶ö‡¶æ‡¶≤‡¶æ‡¶ì‡•§", "‡¶ü‡¶ø‡¶≠‡¶ø ‡¶§‡¶æ‡¶°‡¶º‡¶æ‡¶§‡¶æ‡¶°‡¶º‡¶ø ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßã‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶á ‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡•§",
  "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶≤‡¶Æ‡¶ü‡¶æ ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º?", "‡¶ï‡¶≤‡¶Æ‡¶ü‡¶æ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶á ‡¶Ü‡¶õ‡ßá‡•§", "‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤‡¶ü‡¶æ ‡¶¶‡¶æ‡¶ì ‡¶§‡ßã‡•§", "‡¶´‡ßã‡¶®‡ßá‡¶∞ ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú ‡¶∂‡ßá‡¶∑ ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
  "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶¨‡¶≤‡ßã?", "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ ‡¶¢‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá‡•§", "‡¶Ü‡¶ú ‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞‡¶¨‡¶æ‡¶∞ ‡¶∏‡¶ï‡¶æ‡¶≤‡•§", "‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ‡¶ï‡¶æ‡¶≤ ‡¶õ‡ßÅ‡¶ü‡¶ø‡¶∞ ‡¶¶‡¶ø‡¶®‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶á ‡¶Ü‡¶∏‡¶¨‡ßá?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶Ü‡¶∏‡¶¨‡ßã‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶ú ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶Æ‡ßã‡¶ü‡¶æ‡¶Æ‡ßÅ‡¶ü‡¶ø ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø‡•§",
  "‡¶Ü‡¶ú ‡¶Ü‡¶Æ‡¶ø ‡¶ñ‡ßÅ‡¶¨ ‡¶ñ‡ßÅ‡¶∂‡¶ø‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡¶®‡ßá‡¶ï ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§ ‡¶Ü‡¶õ‡¶ø‡•§", "‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ï‡ßç‡¶∑‡¶Æ‡¶æ ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì‡•§", "‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ö‡¶®‡ßá‡¶ï ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ï‡¶´‡¶ø ‡¶ñ‡¶æ‡¶¨‡ßá?", "‡¶®‡¶æ, ‡¶Ü‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶ö‡¶æ ‡¶ñ‡¶æ‡¶¨‡ßã‡•§", "‡¶è‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ò‡ßÅ‡¶Æ ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶§‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡•§",
  "‡¶¶‡¶∞‡¶ú‡¶æ‡¶ü‡¶æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì‡•§", "‡¶ú‡¶æ‡¶®‡¶æ‡¶≤‡¶æ‡¶ü‡¶æ ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶ñ‡ßÅ‡¶≤‡ßã‡•§", "‡¶∂‡ßÄ‡¶§‡¶≤ ‡¶¨‡¶æ‡¶§‡¶æ‡¶∏ ‡¶Ü‡¶∏‡¶õ‡ßá‡•§", "‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶è‡¶ñ‡¶® ‡¶•‡ßá‡¶Æ‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
  "‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ‡¶¨‡ßã ‡¶è‡¶ñ‡¶®?", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ø‡¶æ‡¶ì‡•§", "‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶ï‡¶§‡¶¶‡ßÇ‡¶∞‡ßá ‡¶Ü‡¶õ‡ßá?", "‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡¶ü‡¶æ ‡¶ñ‡ßÅ‡¶¨ ‡¶ï‡¶æ‡¶õ‡ßá‡¶á ‡¶Ü‡¶õ‡ßá‡•§",
  "‡¶Ü‡¶Æ‡¶ø ‡¶π‡¶æ‡¶Å‡¶ü‡¶§‡ßá ‡¶Ø‡¶æ‡¶¨‡ßã ‡¶è‡¶ñ‡¶®‡•§", "‡¶ö‡¶≤ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶π‡¶æ‡¶Å‡¶ü‡¶ø‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ ‡¶ö‡¶æ‡¶á‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶è‡¶ñ‡¶® ‡¶ñ‡ßÅ‡¶∂‡¶ø?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶á ‡¶ñ‡ßÅ‡¶∂‡¶ø‡•§", "‡¶Ü‡¶ú ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶¨‡¶®‡ßç‡¶ß ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶ñ‡ßá‡¶≤‡¶§‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶´‡ßÅ‡¶ü‡¶¨‡¶≤ ‡¶ñ‡ßá‡¶≤‡¶¨‡ßá?", "‡¶®‡¶æ, ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßç‡¶∞‡¶ø‡¶ï‡ßá‡¶ü ‡¶ñ‡ßá‡¶≤‡¶¨‡ßã‡•§", "‡¶Ü‡¶ú ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ö ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶Ü‡¶ú ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßá‡•§",
  "‡¶Ü‡¶Æ‡¶ø ‡¶ó‡¶æ‡¶® ‡¶∂‡ßÅ‡¶®‡¶õ‡¶ø ‡¶è‡¶ñ‡¶®‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßÄ ‡¶™‡¶°‡¶º‡¶õ‡ßã ‡¶¨‡¶≤‡ßã?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶™‡¶°‡¶º‡¶õ‡¶ø‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶ï‡¶¨‡¶ø‡¶§‡¶æ ‡¶≤‡¶ø‡¶ñ‡¶õ‡¶ø‡•§",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßÄ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶∞‡¶æ‡¶®‡ßç‡¶®‡¶æ ‡¶ï‡¶∞‡¶õ‡¶ø ‡¶è‡¶ñ‡¶®‡•§", "‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶ï‡¶ø?", "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶è‡¶ñ‡¶®‡¶á ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
  "‡¶ñ‡ßá‡¶§‡ßá ‡¶è‡¶∏‡ßã ‡¶∏‡¶¨‡¶æ‡¶á‡•§", "‡¶Ü‡¶Æ‡¶ø ‡¶§‡¶æ‡¶°‡¶º‡¶æ‡¶§‡¶æ‡¶°‡¶º‡¶ø ‡¶Ü‡¶∏‡¶õ‡¶ø‡•§", "‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ñ‡¶®‡¶á ‡¶°‡¶æ‡¶ï‡ßã‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶á ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡¶ø‡¶≤‡ßá ‡¶¨‡¶≤‡ßã?",
  "‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡ßá ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡¶ø‡¶≤‡¶æ‡¶Æ‡•§", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßÄ ‡¶ï‡¶ø‡¶®‡ßá‡¶õ‡ßã ‡¶¨‡¶≤‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶´‡¶≤‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶ø‡¶®‡ßá‡¶õ‡¶ø‡•§", "‡¶è‡¶á ‡¶Ü‡¶Æ‡¶ü‡¶æ ‡¶ñ‡ßÅ‡¶¨ ‡¶Æ‡¶ø‡¶∑‡ßç‡¶ü‡¶ø‡•§",
  "‡¶Ü‡¶Æ‡¶ø ‡¶≤‡¶ø‡¶ö‡ßÅ ‡¶ñ‡ßá‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡•§", "‡¶¶‡ßÅ‡¶ß‡¶ü‡¶æ ‡¶è‡¶ñ‡¶® ‡¶ó‡¶∞‡¶Æ ‡¶Ü‡¶õ‡ßá‡•§", "‡¶ö‡¶æ‡¶≤ ‡¶Ü‡¶®‡ßã ‡¶ò‡¶∞‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡•§", "‡¶°‡¶æ‡¶≤‡¶ü‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶¶‡¶æ‡¶ì‡•§"
];

const sentenceBox = document.getElementById("sentences");
sentences.forEach((s, i) => {
  const p = document.createElement("p");
  p.textContent = (i+1) + ". " + s;
  sentenceBox.appendChild(p);
});

// üé§ Recording
let mediaRecorder;
let audioChunks = [];

const startBtn = document.getElementById("startBtn");
const stopBtn = document.getElementById("stopBtn");
const status = document.getElementById("status");

startBtn.onclick = async () => {
  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
  mediaRecorder = new MediaRecorder(stream);
  mediaRecorder.start();
  audioChunks = [];

  mediaRecorder.ondataavailable = e => audioChunks.push(e.data);

  mediaRecorder.onstop = () => {
    const blob = new Blob(audioChunks, { type: "audio/webm" });
    const url = URL.createObjectURL(blob);

    // Auto download
    const a = document.createElement("a");
    a.href = url;
    a.download = "speech_recording.webm";
    a.click();
  };

  status.textContent = "üéôÔ∏è ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...";
  startBtn.disabled = true;
  stopBtn.disabled = false;
};

stopBtn.onclick = () => {
  mediaRecorder.stop();
  status.textContent = "‚úÖ ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶∂‡ßá‡¶∑!";
  startBtn.disabled = false;
  stopBtn.disabled = true;
};
