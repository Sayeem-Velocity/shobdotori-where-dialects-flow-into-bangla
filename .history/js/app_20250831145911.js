// Sentences
const sentences = [
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶ú‡¶ï‡ßá ‡¶¨‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡•§", "‡¶è‡¶ñ‡¶® ‡¶ï‡¶Ø‡¶º‡¶ü‡¶æ ‡¶¨‡¶æ‡¶ú‡ßá ‡¶¨‡¶≤‡ßã?", "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞ ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡¶á ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
  // ... include all 100 sentences as before
];

const sentenceBox = document.getElementById("sentences");
sentences.forEach((s, i) => {
  const p = document.createElement("p");
  p.textContent = (i+1) + ". " + s;
  sentenceBox.appendChild(p);
});

// üé§ Recording
let mediaRecorder;
let audioChunks = [];
let fileIndexMap = {}; // counters per dialect

const startBtn = document.getElementById("startBtn");
const stopBtn = document.getElementById("stopBtn");
const status = document.getElementById("status");
const dialectSelect = document.getElementById("dialect");

startBtn.onclick = async () => {
  const dialect = dialectSelect.value;
  if (!dialect) {
    alert("‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶°‡¶æ‡¶Ø‡¶º‡¶æ‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®");
    return;
  }

  // init counter
  if (!(dialect in fileIndexMap)) fileIndexMap[dialect] = 0;

  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
  mediaRecorder = new MediaRecorder(stream);
  mediaRecorder.start();
  audioChunks = [];

  mediaRecorder.ondataavailable = e => audioChunks.push(e.data);

  mediaRecorder.onstop = () => {
    const blob = new Blob(audioChunks, { type: "audio/wav" });
    const url = URL.createObjectURL(blob);

    const fileName = `${dialect}_train (${fileIndexMap[dialect]++}).wav`;

    // Trigger browser download (user must save into D:\BanglaSpeechUI\audio\<dialect>)
    const a = document.createElement("a");
    a.href = url;
    a.download = fileName;
    a.click();

    status.textContent = `‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: ${fileName}`;
  };

  status.textContent = "‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶ö‡¶≤‡¶õ‡ßá... ‡¶è‡¶ñ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø ‡¶™‡¶°‡¶º‡ßÅ‡¶®‡•§";
  startBtn.disabled = true;
  stopBtn.disabled = false;
};

stopBtn.onclick = () => {
  mediaRecorder.stop();
  status.textContent = "‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶∂‡ßá‡¶∑ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶¨‡ßã‡¶§‡¶æ‡¶Æ ‡¶ö‡¶æ‡¶™‡ßÅ‡¶®‡•§";
  startBtn.disabled = false;
  stopBtn.disabled = true;
};
// Sentences
const sentences = [
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßã?", "‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶ú‡¶ï‡ßá ‡¶¨‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡•§", "‡¶è‡¶ñ‡¶® ‡¶ï‡¶Ø‡¶º‡¶ü‡¶æ ‡¶¨‡¶æ‡¶ú‡ßá ‡¶¨‡¶≤‡ßã?", "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞ ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡¶á ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
  // ... include all 100 sentences as before
];

const sentenceBox = document.getElementById("sentences");
sentences.forEach((s, i) => {
  const p = document.createElement("p");
  p.textContent = (i+1) + ". " + s;
  sentenceBox.appendChild(p);
});

// üé§ Recording
let mediaRecorder;
let audioChunks = [];
let fileIndexMap = {}; // counters per dialect

const startBtn = document.getElementById("startBtn");
const stopBtn = document.getElementById("stopBtn");
const status = document.getElementById("status");
const dialectSelect = document.getElementById("dialect");

startBtn.onclick = async () => {
  const dialect = dialectSelect.value;
  if (!dialect) {
    alert("‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶°‡¶æ‡¶Ø‡¶º‡¶æ‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®");
    return;
  }

  // init counter
  if (!(dialect in fileIndexMap)) fileIndexMap[dialect] = 0;

  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
  mediaRecorder = new MediaRecorder(stream);
  mediaRecorder.start();
  audioChunks = [];

  mediaRecorder.ondataavailable = e => audioChunks.push(e.data);

  mediaRecorder.onstop = () => {
    const blob = new Blob(audioChunks, { type: "audio/wav" });
    const url = URL.createObjectURL(blob);

    const fileName = `${dialect}_train (${fileIndexMap[dialect]++}).wav`;

    // Trigger browser download (user must save into D:\BanglaSpeechUI\audio\<dialect>)
    const a = document.createElement("a");
    a.href = url;
    a.download = fileName;
    a.click();

    status.textContent = `‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: ${fileName}`;
  };

  status.textContent = "‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶ö‡¶≤‡¶õ‡ßá... ‡¶è‡¶ñ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø ‡¶™‡¶°‡¶º‡ßÅ‡¶®‡•§";
  startBtn.disabled = true;
  stopBtn.disabled = false;
};

stopBtn.onclick = () => {
  mediaRecorder.stop();
  status.textContent = "‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶∂‡ßá‡¶∑ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶¨‡ßã‡¶§‡¶æ‡¶Æ ‡¶ö‡¶æ‡¶™‡ßÅ‡¶®‡•§";
  startBtn.disabled = false;
  stopBtn.disabled = true;
};
